Keyword: AcceptMulti
Where:   Tuning
Type:    Flag
Default: On
Desc:    By default, Mathopd will try to accept more connections
         after it has accepted one, until the accept call indicates
         a blocking condition. When there is hardly any traffic,
         this means that an extra system call is made each time
         a connection comes in. If you don't want that behaviour,
         use this keyword to turn it off.

Keyword: Access
Where:   Control
Type:    Block
Default: Inherits from previous Access blocks
Desc:    The Access block can be used to allow or deny access to
         specific IP addresses. Mathopd has a default-allow policy,
         so if you have no Access blocks, access is allowed to anyone.
         If you do have Access blocks, make sure that you put the
         access entries in the correct order. Mathopd scans
         access blocks from the bottom up until a match is found.
         Example:

            Access {
              Deny 0/0
              Allow 127.0.0.1/32
            }

         This will allow access to 127.0.0.1, while denying access to
         anyone else.

Keyword: Address
Where:   Server
Type:    Address
Default: 0 (any address)
Desc:    If you want a server to listen on a specific address, rather
         than any address, use this keyword.
         Example:

           Server {
             Address 127.0.0.1
           }

Keyword: Admin
Where:   Control
Type:    String
Default: (none)
Desc:    The value of this keyword, if set, is displayed in HTTP error
         messages.

Keyword: Alias
Where:   Control
Type:    String
Desc:    Control blocks that contain an Alias keyword are used in
         URI-to-path translation. A block with an Alias keyword must
         have one or more Location keywords as well. Generally
         speaking, Mathopd scans Control blocks until it can match
         the directory part of the Request-URI with the alias.
         Scanning starts in the Virtual server and continues
         upwards.
         Example:

           Control {
             Alias /
             Location /usr/share/doc/handbook
           }

          You can do some tricks with aliases, one of which is the
          tilde-hack:

            Control {
              Alias /~
              Location public_html
              UserDirectory On
            }

         Note that the order of aliases in the configuration matters.
         In general you should put your leasts specific aliases, like
         the root, first.

Keyword: Allow
Where:   Access
Type:    Network
Desc:    Allow is used to specify a network that is allowed access to
         a resource. It is most useful in combination with Deny keywords.

Keyword: AllowDotfiles
Where:   Control
Type:    Flag
Default: Off
Desc:    Normally, Mathopd will not serve any file if any part of its
         pathname contains '/.', for security reasons.
         If the AllowDotFiles flag is set, there restrictions are lifted
         a bit, although constructions like '/./', '/../', etc. are
         still disallowed.

Keyword: AnyHost
Where:   Virtual

Keyword: Apply
Where:   Clients
Type:    Network

Keyword: BufSize
Where:   Tuning
Type:    Integer

Keyword: BytesRead
Where:   LogFormat

Keyword: BytesWritten
Where:   LogFormat

Keyword: ChildLog
Where:   Control
Type:    String

Keyword: Clients
Where:   Control
Type:    Block

Keyword: ContentLength
Where:   LogFormat

Keyword: Control
Where:   Global, Server, Virtual
Type:    Block

Keyword: CoreDirectory
Where:   Global
Type:    String

Keyword: Ctime
Where:   LogFormat

Keyword: DNSLookups
Where:   Control
Type:    Flag
Default: On

Keyword: Deny
Where:   Access
Type:    Network

Keyword: EncryptedUserFile
Where:   Control
Type:    Flag
Default: Off

Keyword: Error401File
Where:   Control
Type:    String

Keyword: Error403File
Where:   Control
Type:    String

Keyword: Error404File
Where:   Control
Type:    String

Keyword: ErrorLog
Where:   Global
Type:    String

Keyword: ExactMatch
Where:   Control
Type:    Flag

Keyword: Export
Where:   Control
Type:    Block

Keyword: External
Where:   Control
Type:    Block

Keyword: Host
Where:   Virtual
Type:    String

Keyword: IndexNames
Where:   Control
Type:    Block

Keyword: InputBufSize
Where:   Tuning
Type:    Integer
Default: 2048

Keyword: Location
Where:   Control
Type:    String

Keyword: Log
Where:   Global
Type:    String
Desc:    This keyword determines where the access log is stored. The
         server creates one and only one access log, regardless of the
         number of (virtual) servers. The log file must be writeable
         by the user the server runs as. If no log file exists, Mathopd
         will try to create one. In that case, the server must also have
         write access to the directory that will contain the log file.
         There are some hacks that make it easier to maintain logs
         for distinct time periods. Before Mathopd tries to open the
         log file, it will expand any '%' constructs in the log file
         name, similar to date(1) and strftime(3). For example, if

           Log /var/mathopd/log.%Y%m%d

         is used, Mathopd will expand the %Y, %m and %d in the file
         name, to something like /var/mathopd/log.20020831
         Mathopd automatically rotates the log file every hour.
         If during this process Mathopd cannot create a new log file
         for any reason, it will continue to append to the old log.
         The format of the access log is determined by whatever is
         specified in the LogFormat block (see below.)

Keyword: LogFormat
Where:   Global
Type:    Block

Keyword: LogGMT
Where:   Global
Type:    Flag
Default: Off
Desc:    Normally time stamps in log files are in local time. If
         LogGMT is set to 'On', time stamps are in GMT. Note that
         this setting also affects naming of log files when
         '%' constructions are used. (See the 'Log' keyword.)

Keyword: Method
Where:   LogFormat

Keyword: Name
Where:   Server
Type:    String
Desc:    The value of this parameter is passed to CGI programs in the
         SERVER_NAME environment variable, if no match is found for a
         virtual server using Host headers.

Keyword: NoApply
Where:   Clients
Type:    Network

Keyword: NoHost
Where:   Virtual
Desc:    A Virtual server that has the "NoHost" keyword will be used when
         no Host header is sent by the client.

Keyword: NumConnections
Where:   Tuning
Type:    Integer
Default: 64
Desc:    The NumConnections parameter is the #1 tunable for Mathopd. It
         determines how many simultaneous requests can be handled.
         The default is probably too low for high-traffic systems.
         Mathopd uses a fixed block of memory for each connection, so
         the higher you set this tunable, the more memory the server
         will use.

Keyword: PIDFile
Where:   Global
Type:    String
Desc:    The PIDFile keyword specifies a file in which the server will
         record its process ID, for tracking purposes.

Keyword: PathArgs
Where:   Control
Type:    Flag

Keyword: Port
Where:   Server
Type:    Integer
Default: 80

Keyword: PutEnv
Where:   Control
Type:    Block

Keyword: QueryString
Where:   LogFormat

Keyword: Realm
Where:   Control
Type:    String

Keyword: Referer
Where:   LogFormat

Keyword: RemoteAddress
Where:   LogFormat

Keyword: RemotePort
Where:   LogFormat

Keyword: RemoteUser
Where:   LogFormat

Keyword: RootDirectory
Where:   Global
Type:    String

Keyword: RunScriptsAsOwner
Where:   Control
Type:    Flag
Default: Off

Keyword: ScriptUser
Where:   Control
Type:    String

Keyword: Server
Where:   Global
Type:    Block

Keyword: ServerName
Where:   LogFormat

Keyword: Specials
Where:   Control
Type:    Block

Keyword: Status
Where:   LogFormat

Keyword: StayRoot
Where:   Global
Type:    Flag
Default: Off

Keyword: Timeout
Where:   Tuning
Type:    Integer
Default: 60

Keyword: Tuning
Where:   Global
Type:    Block

Keyword: Types
Where:   Control
Type:    Block

Keyword: Umask
Where:   Global
Type:    Integer
Default: 022

Keyword: Uri
Where:   LogFormat

Keyword: User
Where:   Global
Type:    String

Keyword: UserAgent
Where:   LogFormat

Keyword: UserDirectory
Where:   Control
Type:    Flag

Keyword: UserFile
Where:   Control
Type:    String

Keyword: Version
Where:   LogFormat

Keyword: Virtual
Where:   Server
Type:    Block
Desc:    The 'Virtual' keyword starts a virtual server block.
