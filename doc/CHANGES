Changes between Mathopd 1.4 and Mathopd 1.5

cgi.c:

	All headers are now converted into HTTP_ environment
	variables, not just some. (With the exception that
	HTTP_CONTENT_LENGTH and HTTP_CONTENT_TYPE are not set,
	because these are already in other variables, and
	HTTP_AUTHORIZATION is not set if the user is
	authenticated by Mathopd.

	The value of GATEWAY_INTERFACE is now set.
	If the user is authenticated by Mathopd, the value of
	AUTH_TYPE is set.

	The value of SERVER_NAME is set to the value of the
	Host: header sent by the client. This appears to make
	the most sense, especially for virtual servers that are
	created with "AnyHost".

	Do not allow scripts to run under the same user-id as
	ourselves. (Previously, we would not run a script if
	neither ScriptUser nor RunScriptAsOwner were set. But
	that does not catch cases where ScriptUser == User or
	other anomalies.)

	The setting of PATH_INFO and PATH_TRANSLATED is now
	independent on whether we run as a pure CGI program or
	an 'External' script. The SCRIPT_FILENAME variable now
	what would be in PATH_TRANSLATED for external scripts.
	This keeps php happy.

	External scripts can now be called with added command-line
	arguments.

	The DNS lookup code has been removed. This means that
	REMOTE_HOST will never be set.

	The ChildLog is now strftime-expanded, just like the
	other logs.

config.c:

	The following keywords have been added:-

		NumHeaders
		ExtraHeaders
		ScriptTimeout
		ScriptBufSize
		PathInfo
		AutoIndexCommand
		Backlog
		TimeTaken

	The following keywords have been removed:-

		DNSLookups
		Name

	The "Virtual" keyword may now be used in a global context
	as well. If used that way, the virtual server(s) that it
	defines will be inherited by all subsequent Server blocks.

	The value for the User parameter is now immediately checked
	at configuration time, and the user and group IDs are stored
	then. The ScriptUser gets a similar treatment. This means
	that after startup, no password lookups will be done.

core.c:

	If connections are active, call poll() with a timeout
	of one minute, rather than infinity. This should take
	care of connections that remain stuck after shutdown.

	Besides connections we now have `children'. (The struct
	pipe_params thingies.) We loop over these in httpd_main.
	The code that deals with reading from and writing to
	children is still in stub.c

	Do not poll server sockets or try to accept() if there is no
	room for any new connection. Previously mathopd would accept
	and then immediately drop a connection. That does not make
	a lot of sense. So we now let new connections hang in the air
	until an existing connection goes away or changes into a
	keep-alive state.

	Make a time stamp in the connection structure when a bona
	fide request appears. This can be used to log the time taken
	to process a request.

dump.c:

	Adjust the formatting slightly.

	Take the new connections states into account.

	Mark the `current' connection.

log.c:

	New global function: open_log().

	We no longer log to standard error if the -n command-line
	option is set, because that interferes with the ChildLog
	for forked requests.

main.c:

	If we are not running as a daemon, do not close all file
	descriptors.

	The fork_request function has been removed, since most of
	the work is now done in the main process (in cgi.c).
	Instead, we have a spawn() function, that forks, does a
	minimum amount of initialization routines, like change
	user-id, current directory, and so on, and then immediately
	calls exec. On some platforms we can even use vfork() rather
	then fork() to achieve a rather dramatic speedup.

	The second argument to the listen() call is now dynamic via
	the Backlog keyword.

request.c:

	Store all headers in the r->headers array (up to a maximum
	number, determined by NumHeaders.)

	Print extra headers, if defined by the ExtraHeaders keyword.

	Add satisfy_range(). In process_fd(), seek to the correct
	file offset if "Range" header is present in the request. Return
	200, 206 or 416 status based on range headers. Deal with "If-Range"
	headers. Added process_range_header(). Ignore (and log) multiple
	Range headers and requests for multiple ranges.

	Return 412 error for GET requests with If-Unmodified-Since header
	if applicable.

	Do not fold the Request-Line. That is, if the first line after
	the Request-Line ("GET / HTTP/1.1") starts with a space, do not
	treat it as a continuation of the Request-Line.

	Return a 400 rather than 404 error if a virtual server cannot be
	found. This is required by RFC2616.

	Allow requests with an absolute URI in the Request-Line
	("GET http://localhost/ HTTP/1.1").

	Store the value of Transfer-Encoding. Do not allow transfer-codings
	other than 'chunked'. If Content-Length is sent in addition to
	Transfer-Encoding, ignore the content-length.

	Return 411 error for POST requests without Content-Length.
	(Thus for the time being we refuse POST requests with a chunked
	message body.)

	In get_path_info(), if the first call to stat() fails and
	path_info_ok is not set, return an error immediately.

	If the AutoIndexCommand is set for a control block, execute that
	command as a CGI script if the request is for a directory and there
	is no index, as specified by IndexNames.

	The parsing of the Request-Line has changed. Rather than assuming
	that the last word of that line contains the HTTP version, scan
	the Request-Line for the string 'HTTP'.

	Request-URIs that are too long produce a 414 error.

stub.c:

	New file. This file has been imported from the phpstub program,
	and then mutilated beyond all recognition.
