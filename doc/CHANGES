Changes between Mathopd 1.4 and Mathopd 1.5

cgi.c:

	All headers are now converted into HTTP_ environment
	variables, not just some.

	The value of GATEWAY_INTERFACE is now set.

	The value of SERVER_NAME is set to the value of the
	Host: header sent by the client. This appears to make
	the most sense, especially for virtual servers that are
	created with "AnyHost".

	Do not allow scripts to run under the same user-id as
	ourselves. (Previously, we would not run a script if
	neither ScriptUser nor RunScriptAsOwner were set. But
	that does not catch cases where ScriptUser == User or
	other anomalies.)

config.c:

	The `NumHeaders' keyword has been added to the Tuning
	block. It determines the maximum amount of headers that
	are passed to child programs using HTTP_ variables.

	The `ExtraHeaders' keyword has been added to the Control
	block. It allows one to pass user-defined headers (like
	"Cache-Control" etc.) to the client.

	The "Name" keyword has been removed since it no longer
	has any function.

	The "Virtual" keyword may now be used in a global context
	as well.

	The "ScriptTimeout" and "ScriptBufSize" keywords have been
        added to the Tuning block.

	The "PathInfo" keyword has been added.

core.c:

	If connections are active, call poll() with a timeout
	of one minute, rather than infinity. This should take
	care of connections that remain stuck after shutdown.

	Besides connections we now have `children'. (The struct
	pipe_params thingies.) We loop over these in httpd_main.
	The code that deals with reading from and writing to
	children is still in stub.c

dump.c:

	Adjust the formatting slightly.

	Take the new connections states into account.

	Mark the `current' connection.

log.c:

	New global function: open_log().

main.c:

	Do not allow 'forked' requests when there is no ChildLog.

	Allow ChildLogs that can be %-expanded, just like the other
	log files (via open_log).

	The fork_request now creates a socket pair to communicate with
	the child process, and calls init_child(), which converts the
	underlying connection into something that the stub can handle.

request.c:

	Store all headers in the r->headers array (up to a maximum
	number, determined by NumHeaders.)

	Print extra headers, if defined by the ExtraHeaders keyword.

	Add satisfy_range(). In process_fd(), seek to the correct
	file offset if "Range" header is present in the request. Return
	200, 206 or 416 status based on range headers. Deal with "If-Range"
	headers. Added process_range_header(). Ignore (and log) multiple
	Range headers and requests for multiple ranges.

	Return 412 error for GET requests with If-Unmodified-Since header
	if applicable.

	Do not fold the Request-Line. That is, if the first line after
	the Request-Line ("GET / HTTP/1.1") starts with a space, do not
	treat it as a continuation of the Request-Line.

	Return a 400 rather than 404 error if a virtual server cannot be
	found. This is required by RFC2616. 

	Allow requests with an absolute URI in the Request-Line
	("GET http://localhost/ HTTP/1.1").

	Store the value of Transfer-Encoding. Do not allow transfer-codings
	other than 'chunked'. If Content-Length is sent in addition to
	Transfer-Encoding, ignore the content-length.

	Return 411 error for POST requests without Content-Length.
	(Thus for the time being we refuse POST requests with a chunked
	message body.)

	In get_path_info(), if the first call to stat() fails and
	path_info_ok is not set, return an error immediately.

stub.c:

	New file. This file is imported from the phpstub program. This
	means that phpstub is now obsolete (as far as Mathopd 1.5 is
	concerned.)
